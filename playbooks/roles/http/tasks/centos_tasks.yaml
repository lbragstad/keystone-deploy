- name: install yum packages
  yum:
    pkg={{ item }}
    update_cache=yes
  with_items:
    - httpd
    - git
    - mod_wsgi
    - libffi-devel
    - python-devel
    - gcc
    - openssl-devel
  notify: restart httpd

- shell: "httpd -v | grep 'Apache/2.4'"
  register: apache24
  ignore_errors: True

- name: checkout source code
  git:
    repo=https://review.openstack.org/openstack/{{ item.repo }}.git
    dest=/opt/{{ item.repo }}
    force=yes
    refspec={{ item.version }}
  with_items:
    - { repo: 'keystone', version: "{{ keystone_version | default('refs/heads/master') }}"  }
    - { repo: 'keystonemiddleware', version: "{{ keystonemiddleware_version | default('refs/heads/master') }}" }
    - { repo: 'python-keystoneclient', version: "{{ keystoneclient_version | default('refs/heads/master') }}" }

- name: create access logs
  file:
    path=/var/log/httpd/{{ item }}.access.log
    state=touch
    owner=apache
    group=apache
    mode=0755
  with_items:
    - keystone-admin
    - keystone-main

- name: create error logs
  file:
    path=/var/log/httpd/{{ item }}.error.log
    state=touch
    owner=apache
    group=apache
    mode=0755
  with_items:
    - keystone-admin
    - keystone-main

- name: deploy virtual hosts
  template:
    src={{ item }}.vhost
    dest=/etc/httpd/conf.d/{{ item }}.conf
    owner=apache
    group=apache
  with_items:
    - echo
    - keystone
  notify: restart httpd

- name: establish a configuration directory for keystone
  file:
    path=/etc/keystone
    state=directory
    owner=apache
    group=apache
    mode=0755
  notify: restart httpd

- name: establish a configuration directory for fernet encryption keys
  file:
    path=/etc/keystone/fernet-keys
    state=directory
    owner=apache
    group=apache
    mode=0700
  notify: restart httpd
  when: use_fernet is defined

- name: create dirs for wsgi scripts
  file:
    path=/var/www/{{ item }}
    state=directory
    owner=apache
    group=apache
    mode=0755
  with_items:
    - echo
    - keystone
  notify: restart httpd

- name: deploy keystone wsgi scripts
  template:
    src={{ item.src }}
    dest=/var/www/{{ item.app }}/{{ item.script }}
    owner=apache
    group=apache
    mode=0400
  with_items:
    - { app: 'keystone', script: 'admin', src: 'keystone.wsgi' }
    - { app: 'keystone', script: 'main',  src: 'keystone.wsgi'}
    - { app: 'echo', script: 'echo.py', src: 'echo.py' }
  notify: restart httpd

- name: deploy keystone configuration files
  template:
    src={{ item }}
    dest=/etc/keystone/{{ item }}
    owner=apache
    group=apache
    mode=0400
  with_items:
    - keystone.conf
    - paste.ini
    - policy.json
  notify: restart httpd

- name: install extra python requirements
  pip:
    name={{ item }}
    state=latest
  with_items:
    - pycrypto
    - python-memcached
    - six  # workaround for debian wheezy?

- name: install python projects
  shell: cd /opt/{{ item }} && python setup.py install
  with_items:
    - keystone
    - keystonemiddleware
    - python-keystoneclient

- name: install pbr
  pip:
    name=pbr
    state=present
    version=0.10.8
  notify: restart httpd

- name: run database migrations
  shell: keystone-manage db_sync
  notify: restart httpd

- name: stop iptables
  service:
    name=iptables
    state=stopped

- name: open up port 35357
  command: iptables -A INPUT -p tcp --dport 35357 -j ACCEPT

- name: open up port 5000
  command: iptables -A INPUT -p tcp --dport 5000 -j ACCEPT

- name: open up port 80
  command: iptables -A INPUT -p tcp --dport 80 -j ACCEPT

- name: save iptables
  command: /sbin/service iptables save

- name: start iptables
  service:
    name=iptables
    state=started

- name: setup the fernet encryption keys
  command: keystone-manage fernet_setup --keystone-user=apache --keystone-group=apache
  when: use_fernet is defined
